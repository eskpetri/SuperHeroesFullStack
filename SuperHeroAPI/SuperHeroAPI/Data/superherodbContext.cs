// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using DateTimeAPI.Converters;
using Microsoft.EntityFrameworkCore;
using SuperHeroAPI.Models;

namespace SuperHeroAPI.Data;

public partial class superherodbContext : DbContext
{
    public superherodbContext(DbContextOptions<superherodbContext> options) : base(options)    {    }

    //.NET7 EF7 don't have yet date and time converters
    protected override void ConfigureConventions(ModelConfigurationBuilder configurationBuilder)
    {
        base.ConfigureConventions(configurationBuilder);

        configurationBuilder.Properties<DateOnly>()
                            .HaveConversion<DateOnlyEFConverter>()
                            .HaveColumnType("date");

        configurationBuilder.Properties<TimeOnly>()
                  .HaveConversion<TimeOnlyEFConverter>()
                  .HaveColumnType("time");
    }

    public virtual DbSet<Character> Character { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Character>(entity =>
        {
            //entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Id).ValueGeneratedOnAdd();       //Autoincrement in database
            entity.Property(e => e.Firstname).HasMaxLength(50);
            entity.Property(e => e.Lastname).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.Place).HasMaxLength(50);
            entity.Property(e => e.Birthdate).HasColumnType("date");
            entity.Property(e => e.Wakeuptime).HasColumnType("time").HasPrecision(0);
            entity.Property(e => e.IsHero)
                            .HasDefaultValueSql("((1))")
                            .HasColumnType("boolean")
                            .HasColumnName("isHero");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}